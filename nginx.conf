
  worker_processes                auto;

error_log                       /dev/stdout warn;

# Use tmp for running with non-root
pid                             /tmp/nginx.pid;

events {
    worker_connections          1024;
}

http {
    log_format  custom_log  '"Request:"  $request\n "Status:" $status\n' 
                            '"Req_uri:"  $request_uri\n "Host:" $host\n' 
                            '"Client:"  $remote_addr\n' 
                            '"Proxy_IP:" $proxy_add_x_forwarded_for\n "Proxy_hostname:" $proxy_host\n' 
                            '"Real_IP:" $http_x_real_ip\n "'; 
    
    # Use tmp for running with non-root
    client_body_temp_path       /tmp/client_temp;
    proxy_temp_path             /tmp/proxy_temp_path;
    fastcgi_temp_path           /tmp/fastcgi_temp;
    uwsgi_temp_path             /tmp/uwsgi_temp;
    scgi_temp_path              /tmp/scgi_temp;

    include                     /etc/nginx/mime.types;
    default_type                application/octet-stream;
    sendfile                    on;
    access_log                  /dev/stdout;
    keepalive_timeout           3000;
    
    server {
        listen 80 ;
        root  /usr/share/nginx/html;
        index                   /usr/share/nginx/html/index.html;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        server_name             localhost;



        location / {
            client_max_body_size 1k;
            proxy_pass http://frontend:8888;
            proxy_http_version 1.1;

            proxy_redirect off;

            # Headers
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /login {
            add_header Cache-Control "public, max-age=31536000, immutable";

             # Headers
             proxy_redirect off;

            # Headers
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            root  /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

        location /signin {

            proxy_pass http://backend:8080;
            proxy_http_version 1.1;
             # Headers
             proxy_redirect off;

            # Headers
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
       

        location /sockjs-node/ {
         proxy_pass http://frontend:8888;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "Upgrade";

    }

        location /api {
            client_max_body_size 1m;

            proxy_pass http://backend:8080;
            proxy_http_version 1.1;
            proxy_redirect off;
            # Headers
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }  
        
        location /dashboard/ {
            add_header Cache-Control "public, max-age=31536000, immutable";

            proxy_redirect off;
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            root  /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

    }
}


